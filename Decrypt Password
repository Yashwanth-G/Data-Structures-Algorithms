/*
Input: 51Pa*0Lp*0e

Output: aP1pL5e
*/

class Solution
{
	static void removeChar(char[] s, char c) 
	{ 
    int j, count = 0, n = s.length;  
    for (int i = j = 0; i < n; i++) 
		{ 
        if (s[i] != c) 
			s[j++] = s[i]; 
        else
            count++; 
		} 
      while(count > 0) 
		{ 
        s[j++] = '\0'; 
        count--; 
		}  
	} 
	static void swap(char ch[], int i, int j) 
    {  
        char temp = ch[i]; 
        ch[i] = ch[j]; 
        ch[j] = temp; 
    } 
	public static String decrypt(String s)
	{
		int zeroes = 0;
		char[] c = s.toCharArray();
		for(int i = 0 ; i < c.length ; i++)
		{
			if(c[i] == '0')
			{
				++zeroes;
			}
		}
		int index = zeroes;
		for(int i = 0 ; i < c.length ; i++)
		{
			if(c[i] == '0')
			{
				c[i] = c[zeroes-1];
				--zeroes;
			}
		}
		for(int i = index ; i < c.length - 1; i++)
		{
			if(Character.isUpperCase(c[i]) && Character.isLowerCase(c[i+1])){
				swap(c, i, i+1);
			}
		}
		removeChar(c, '*');
		String result = new String(c);
		return result.substring(index, result.length());
	}
	public static void main(String[] args)
	{
		String str = "5132Pa*0Lp*0e**00aP";
		System.out.println("Original String: "+str);
		String res = decrypt(str);
		System.out.println("Modified String: "+res);
	}
}
